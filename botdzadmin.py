import asyncio
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.client.default import DefaultBotProperties

TOKEN = "7853159809:AAGsR7juazkDv1SR412sIiAKZciYUZtN-AQ"

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –°—Ç–∞–Ω –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –î–ó
class HomeworkStates(StatesGroup):
    waiting_for_homework = State()

# –°—Ç–∞–Ω –¥–ª—è –≤–∏–±–æ—Ä—É –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–µ—Ä–µ–¥ —Ñ–æ—Ç–æ
class NoteStates(StatesGroup):
    choosing_subject = State()
    waiting_for_photo = State()

# –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
subjects = [
    "–£–∫—Ä –º–æ–≤–∞", "–ê–ª–≥–µ–±—Ä–∞", "–ì–µ–æ–º–µ—Ç—Ä—ñ—è", "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç",
    "–Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä", "–§—ñ–∑–∏–∫–∞", "–ó–∞—Ä—É–±—ñ–∂–Ω–∞", "–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è"
]

# –ú–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìò –î–æ–¥–∞—Ç–∏ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è")],
        [KeyboardButton(text="üñº –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –∫–æ–Ω—Å–ø–µ–∫—Ç—ñ–≤")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
subject_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text=subj)] for subj in subjects] + [[KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]],
    resize_keyboard=True
)

# /start
@dp.message(F.text == "/start")
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç, –∞–¥–º—ñ–Ω–µ! –û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=main_menu)

# –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–î–æ–¥–∞—Ç–∏ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è"
@dp.message(F.text == "üìò –î–æ–¥–∞—Ç–∏ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è")
async def get_homework(message: types.Message, state: FSMContext):
    await message.answer("–ù–∞–¥—ñ—à–ª–∏ —Ç–µ–∫—Å—Ç –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è:")
    await state.set_state(HomeworkStates.waiting_for_homework)

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –î–ó
@dp.message(HomeworkStates.waiting_for_homework, F.text)
async def save_homework(message: types.Message, state: FSMContext):
    dz_text = message.text
    os.makedirs(".venv", exist_ok=True)
    with open("C:/Users/–ú–∏–∫–æ–ª–∞ –ö–º–∏—Ü—è–∫/PythonProject1/.venv/dz.txt", "w", encoding="utf-8") as f:
        f.write(dz_text)
    await message.answer("‚úÖ –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ!", reply_markup=main_menu)
    await state.clear()

# –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –∫–æ–Ω—Å–ø–µ–∫—Ç—ñ–≤"
@dp.message(F.text == "üñº –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –∫–æ–Ω—Å–ø–µ–∫—Ç—ñ–≤")
async def choose_subject(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=subject_kb)
    await state.set_state(NoteStates.choosing_subject)

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø—Ä–µ–¥–º–µ—Ç–∞
@dp.message(NoteStates.choosing_subject, F.text.in_(subjects))
async def subject_chosen(message: types.Message, state: FSMContext):
    await state.update_data(subject=message.text)
    await message.answer(f"–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∫–æ–Ω—Å–ø–µ–∫—Ç—É –¥–ª—è ¬´{message.text}¬ª")
    await state.set_state(NoteStates.waiting_for_photo)

# –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ç–æ
@dp.message(NoteStates.waiting_for_photo, F.photo)
async def handle_photo(message: types.Message, state: FSMContext):
    data = await state.get_data()
    subject = data.get("subject")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
    dir_name = os.path.join("notes", subject.replace(" ", "_"))
    os.makedirs(dir_name, exist_ok=True)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ
    photo = message.photo[-1]
    photo_id = photo.file_id
    file = await bot.get_file(photo_id)
    file_path = file.file_path

    photo_name = f"{message.from_user.id}_{photo_id}.jpg"
    destination = os.path.join(dir_name, photo_name)
    await bot.download(file, destination)

    await message.answer(f"‚úÖ –§–æ—Ç–æ –¥–ª—è ¬´{subject}¬ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ!", reply_markup=main_menu)
    await state.clear()

# –ù–∞–∑–∞–¥
@dp.message(NoteStates.choosing_subject, F.text == "üîô –ù–∞–∑–∞–¥")
async def go_back(message: types.Message, state: FSMContext):
    await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.", reply_markup=main_menu)
    await state.clear()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__== "__main__":
    async def main():
    await dp.start_polling(bot)
